#!/usr/bin/env python3
''' Crawls publically available Ethereum public function signatures
and generates code to convert hex signatures to understandable ones '''

# Standard lib imports
import urllib.request, json 
import csv
from os.path import abspath, dirname, join

# Prepend .. to $PATH so the project modules can be imported below
src_path = join(dirname(abspath(__file__)), "..")
sys.path.insert(0, src_path)

from src.common import public_function_signature_filename
API = 'https://www.4byte.directory/api/v1/signatures/'

def get_data(page):
    with urllib.request.urlopen(API+'?page=%d'%page, timeout = 10) as url:
        resp = url.read().decode()
        data = json.loads(resp)
    return [(d['hex_signature'],d['text_signature']) for d in data['results']]

i = 0
rows = []
while True:
    i += 1
    for attempt in range(10):
        try:
            data = get_data(i)
            print('ok')
            rows.extend(data)
            break
        except IOError as e:
            print(e)
    if attempt >= 9:
        print('giving up')
        break


with open(public_function_signature_filename, 'w') as f:
    for k, v in rows:
        f.write('%s\t%s\n'%(k, v))

